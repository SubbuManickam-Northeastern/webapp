name: Packer Build after merge

on:
  pull_request:
    types:
      - closed
env:
  AMI_ID : ""

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Shutdown Ubuntu MySQL (SUDO)
        run: sudo service mysql stop

      - name: Write Properties file
        uses: DamianReeves/write-file-action@master
        with:
          path: './webapp/src/main/resources/application.properties'
          contents: |
            server.port=${{ secrets.SERVER_PORT }}
            spring.datasource.url=${{ secrets.DATASOURCE_URL }}
            spring.datasource.username=${{ secrets.DB_USERNAME }}
            spring.datasource.password=${{ secrets.DB_PASSWORD }}
            spring.datasource.driver-class-name=${{ secrets.DRIVER_CLASS }}
            spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
            spring.jpa.hibernate.ddl-auto=update
            publish.metrics=true
            metrics.server.hostname=${{ secrets.METRICS_HOSTNAME }}
            metrics.server.port=${{ secrets.METRICS_PORT }}
          write-mode: append
      
      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: ${{ secrets.SQL_HOST_PORT }}
          mysql database: ${{ secrets.DB_NAME }}
          mysql user: ${{ secrets.DB_USERNAME }}
          mysql password: ${{ secrets.DB_PASSWORD }}
          
      - name: Build with Maven
        run: mvn -f /home/runner/work/webapp/webapp/webapp/pom.xml clean install

      - name: Configure AWS Credentials for DEV CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_DEV_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Packer Init
        run: packer init .
        
      - name: Packer Validate
        run: packer validate .

      - name: Packer Build
        run: echo "AMI_ID = $(packer build -machine-readable . | awk -F, '$0 ~/artifact,0,id/ {print $6}')" >> $GITHUB_ENV
        
      - name: Add AWS Credentials for DEMO CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Create New Launch Template with AMI
        run: aws ec2 create-launch-template-version --launch-template-id ${{secrets.LAUNCH_TEMPLATE_ID}} --source-version '$Latest' --launch-template-data '{"ImageId":"'$(echo ${{env.AMI_ID}} | sed 's/.*://')'"}'
        
      - name: Update Auto Scaling Group with new ID
        run: aws autoscaling update-auto-scaling-group --auto-scaling-group-name ${{secrets.ASG_NAME}} --launch-template LaunchTemplateName=${{secrets.LAUNCH_TEMPLATE_NAME}},Version='$Latest'

      - name: Start Instance Refresh
        run: aws autoscaling start-instance-refresh --auto-scaling-group-name ${{secrets.ASG_NAME}}